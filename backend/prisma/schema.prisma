
// Generador y conexión a la base de datos

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ===================== MODELOS EN ESPAÑOL =====================

model categoria {
  id          String     @id
  nombre      String
  creadoEn    DateTime   @default(now())
  actualizadoEn DateTime
  productos   producto[]
}

model cliente {
  id            String   @id @default(uuid())
  nombre        String
  regionId      String
  telefono      String
  correo        String
  creadoEn      DateTime @default(now())
  actualizadoEn DateTime @updatedAt

  region        region   @relation(fields: [regionId], references: [id])
  ventas        venta[]
}

model empleado {
  id           String              @id
  nombre       String
  departamento departamento_empleado
  jefeId       String?
  creadoEn     DateTime            @default(now())
  actualizadoEn DateTime
  jefe         empleado?           @relation("EmpleadoAJefe", fields: [jefeId], references: [id])
  subordinados empleado[]          @relation("EmpleadoAJefe")
  ventas       venta[]

  @@index([jefeId])
}

model producto {
  id            String        @id
  nombre        String
  categoriaId   String
  tipo          tipo_producto
  precioBase    Float
  precioVenta   Float @default(0)
  creadoEn      DateTime      @default(now())
  actualizadoEn DateTime
  categoria     categoria     @relation(fields: [categoriaId], references: [id])
  ventas        venta[]

  @@index([categoriaId])
}

model region {
  id            String   @id
  ciudad        String
  coordenadas   String?
  pais          String
  creadoEn      DateTime @default(now())
  actualizadoEn DateTime
  clientes      cliente[]
  ventas        venta[]
}

model rol {
  id      Int      @id @default(autoincrement())
  nombre  nombre_rol @unique
  usuarios usuario[]
}

model sala_venta {
  id          String   @id @default(uuid())
  nombre      String
  descripcion String?
  creadoEn    DateTime @default(now())
  actualizadoEn DateTime @updatedAt
  ventas      venta[]
}

model venta {
  id             String       @id
  fechaVenta     DateTime
  productoId     String
  clienteId      String
  empleadoId     String
  cantidad       Int
  precioUnitario Float
  total          Float
  descuento      Float?
  metodoPago     metodo_pago
  regionId       String
  salaVentaId    String
  usuarioId      Int
  creadoEn       DateTime     @default(now())
  actualizadoEn  DateTime
  cliente        cliente      @relation(fields: [clienteId], references: [id])
  empleado       empleado     @relation(fields: [empleadoId], references: [id])
  producto       producto     @relation(fields: [productoId], references: [id])
  region         region       @relation(fields: [regionId], references: [id])
  sala_venta     sala_venta   @relation(fields: [salaVentaId], references: [id])
  usuario        usuario      @relation(fields: [usuarioId], references: [id])

  @@index([clienteId])
  @@index([empleadoId])
  @@index([productoId])
  @@index([regionId])
  @@index([fechaVenta])
  @@index([usuarioId])
  @@index([salaVentaId])
}

model sesion {
  id          Int      @id @default(autoincrement())
  usuarioId   Int
  token       String   @unique
  creadoEn    DateTime @default(now())
  expiraEn    DateTime
  usuario     usuario  @relation(fields: [usuarioId], references: [id])

  @@index([usuarioId])
}

model usuario {
  id            Int         @id @default(autoincrement())
  nombre        String
  correo        String      @unique
  contrasena    String      @db.VarChar(255)
  rolId         Int
  activo        Boolean     @default(true)
  creadoEn      DateTime    @default(now())
  actualizadoEn DateTime    @updatedAt

  rol           rol         @relation(fields: [rolId], references: [id])
  ventas        venta[]
  sesiones      sesion[]

  @@index([rolId])
}

// ===================== ENUMS EN ESPAÑOL =====================

enum nombre_rol {
  ADMIN
  GERENTE
  ANALISTA
  USUARIO
}

enum departamento_empleado {
  VENTAS
  LOGISTICA
  ATENCION_CLIENTE
}

enum metodo_pago {
  EFECTIVO
  TARJETA
  TRANSFERENCIA
}

enum tipo_producto {
  PIZZA
  BEBIDA
}
